#!/bin/bash

#This version checks the headers of the CSV files to make sure they match before merging.

# Prompt the user for the folder path containing CSV files
read -p "Enter the folder path containing CSV files: " folder_path

# Check if the folder path exists
if [ ! -d "$folder_path" ]; then
  echo "Invalid folder path. Please provide a valid path."
  exit 1
fi

# Check if there are at least two CSV files in the folder
csv_files=$(find "$folder_path" -maxdepth 1 -type f -name "*.csv" | wc -l)
if [ "$csv_files" -lt 2 ]; then
  echo "At least two CSV files are required for merging."
  exit 1
fi

# Get the list of CSV files
csv_file_list=($(find "$folder_path" -maxdepth 1 -type f -name "*.csv"))

# Extract the header from the first CSV file
first_file="${csv_file_list[0]}"
header=$(head -n 1 "$first_file")

# Flag to check if all headers match the first file
headers_match=true

# Check the headers of each CSV file
for file in "${csv_file_list[@]}"; do
  current_header=$(head -n 1 "$file")
  if [ "$header" != "$current_header" ]; then
    echo "Error: Headers do not match for file '$file'"
    headers_match=false
  fi
done

# If headers do not match, exit with an error message
if [ "$headers_match" = false ]; then
  echo "Error: Headers do not match in some files. Merging aborted."
  exit 1
fi

# Merge the CSV files
output_file="$folder_path/merged.csv"

# Remove the output file if it already exists
if [ -f "$output_file" ]; then
  echo "Removing existing merged file: $output_file"
  rm "$output_file"
fi

# Create the output file with the header
echo "$header" > "$output_file"

# Concatenate the data from each CSV file (excluding headers) to the output file
for file in "${csv_file_list[@]}"; do
  tail -q -n +2 "$file" >> "$output_file"
done

echo "Merging completed. The merged file '$output_file' has been created."
